{*

Generate all color tokens as named variables.
Tokens are named by their group path and then name, 
and their value rendered using `rendered-color` blueprint

*}
:root {
{[ let brand = ds.currentBrand() /]}
{[ for token in ds.tokensByType("Color", brand.id) ]}
{[ let tokenGroup = ds.tokenGroupContainingTokenId(token.id) /]}
{[ let tokenName = readableVariableName(token, tokenGroup, '') /]}
{[ if (!tokenName.startsWith('black') && !tokenName.startsWith('white') && !tokenName.startsWith('blue') && !tokenName.startsWith('grey') && !tokenName.startsWith('green') && !tokenName.startsWith('red') && !tokenName.startsWith('base') && !tokenName.startsWith('webstack')) ]}
  {[ inject "rendered-token-var" context token /]}


{[/]}
{[/]}
}